// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Communication;
using Azure.Core;

namespace Azure.Communication.CallingServer
{
    internal partial class CallConnectionsDetailsResponseInternal
    {
        internal static CallConnectionsDetailsResponseInternal DeserializeCallConnectionsDetailsResponseInternal(JsonElement element)
        {
            Optional<string> callConnectionId = default;
            Optional<CommunicationIdentifierModel> source = default;
            Optional<IReadOnlyList<CommunicationIdentifierModel>> targets = default;
            Optional<CallState> callState = default;
            Optional<string> subject = default;
            Optional<string> callbackUri = default;
            Optional<IReadOnlyList<CallModality>> requestedMediaTypes = default;
            Optional<IReadOnlyList<EventSubscriptionType>> requestedCallEvents = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("callConnectionId"))
                {
                    callConnectionId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("source"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    source = CommunicationIdentifierModel.DeserializeCommunicationIdentifierModel(property.Value);
                    continue;
                }
                if (property.NameEquals("targets"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<CommunicationIdentifierModel> array = new List<CommunicationIdentifierModel>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(CommunicationIdentifierModel.DeserializeCommunicationIdentifierModel(item));
                    }
                    targets = array;
                    continue;
                }
                if (property.NameEquals("callState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    callState = new CallState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("subject"))
                {
                    subject = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("callbackUri"))
                {
                    callbackUri = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("requestedMediaTypes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<CallModality> array = new List<CallModality>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(new CallModality(item.GetString()));
                    }
                    requestedMediaTypes = array;
                    continue;
                }
                if (property.NameEquals("requestedCallEvents"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<EventSubscriptionType> array = new List<EventSubscriptionType>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(new EventSubscriptionType(item.GetString()));
                    }
                    requestedCallEvents = array;
                    continue;
                }
            }
            return new CallConnectionsDetailsResponseInternal(callConnectionId.Value, source.Value, Optional.ToList(targets), Optional.ToNullable(callState), subject.Value, callbackUri.Value, Optional.ToList(requestedMediaTypes), Optional.ToList(requestedCallEvents));
        }
    }
}
